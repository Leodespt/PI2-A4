import Actifs
import Portefeuille
import Connexion
import numpy as np
   
class Fitness():
    
    def __init__(self, portfeuille):
        self.portfeuille = portfeuille
        
    def pf_return(self, prop):   
      #Compute the return of the portfolio
        rend = []
        for i in range(0, len(self.portfeuille)):
            rend.append(np.prod([x+1 for x in self.portfeuille.rend])**(1/self.portefeuille.rend[i]) - 1)
        return(sum([a*b for a,b in zip(prop, rend)])/len(rend)) 

    
    def pf_vol(self, prop):
        std = []
        for i in self.portfeuille.rend:
            mean = sum(i)/len(i)
            std.append(np.sqrt(sum([(x-mean)**2 for x in i])))
        mean_prop = [a*b for a,b in zip(prop, std)]/len(self.portfeuille.rend)
        cor = np.corrcoef(self.portefeuille.rend)
        val = []
        for j in range(0, len(mean_prop)):
            val.append(sum([mean_prop[j]*mean_prop[x] ** cor[j,x] for x in range(0,len(mean_prop))]))
        return(np.sqrt(sum(val))) 
